#!/bin/bash

INGRESO=""
DIRECTORIO=""

#Constantes de instalacion
RUTAPAQUETE=$(pwd)'/grupo07.tar.gz'
RUTADATOS=$(pwd)'/datos'
RUTAEJECUTABLES="${RUTAPAQUETE}"'/sh'
RUTAARCHIVOSMAESTROSYTABLAS=${RUTADATOS}'/mae'	


	
chmod +x ./mover
chmod +x ./glog

#Variables globales


MENSAJEOK="${GREEN}OK${NC}"



#######################################################################################################
#	       DEFINICION DE FUNCIONES
#######################################################################################################
DATASIZE=100
LOGSIZE=10000

#Variables globales
GRUPO=$(pwd)
CONFDIR="${GRUPO}/conf"
LOGDIR="${GRUPO}/conf/log"
ARCHIVOLOG="${GRUPO}/conf/log/Instalacion.log"
ARCHIVOCONF="${CONFDIR}/tpconfig.txt"
BINDIR="${GRUPO}/bin"
MAEDIR="${GRUPO}/maestros"
EXTDIR="${GRUPO}/externos"
ACEPDIR="${GRUPO}/aceptados"
RECHDIR="${GRUPO}/rechazados"
PROCDIR="${GRUPO}/procesados"
SALDIR="${GRUPO}/salida"

MENSAJECREACIONCONFDIR="Creacion del directorio de Configuracion (${CONFDIR}):"
MENSAJECREACIONLOGDIR="Creacion del directorio de LOGS (${LOGDIR}):"

#Crea los directorio de configuracion y de log.
CrearDirectoriosIniciales(){
	mkdir -p "${CONFDIR}"
	mkdir -p "${LOGDIR}"
	./glog Instalacion "${MENSAJECREACIONCONFDIR}"
	./glog Instalacion "${MENSAJECREACIONLOGDIR}"
}


MENSAJECOPYRIGHT="TP SO7508 Segundo Cuatrimestre 2018. Copyright © Grupo 02"
mostrarHeader(){
	clear
	echo -e ${MENSAJECOPYRIGHT}
	echo ''
}

VARBOOL="F"
VerificarNoRepetido(){
#nombres reservados: BIN,CONF,maestros,externos,aceptados,rechazados,procesados,salida		
	if [ "${INGRESO}" == "conf" ] || [ "${INGRESO}" == "log"  ];
	then
		echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado."
		VARBOOL="F"
		return
	fi
	

	#DIRECTORIO = BIN
	if [ "${DIRECTORIO}" == "BIN" ]
		then
		    if [ "${INGRESO}" == "bin" ]
			then 
				VARBOOL="V"
				return
			fi
	            if [ "${INGRESO}" == "maestros" ] || [ "${INGRESO}" == "externos" ] || [ "${INGRESO}" == "aceptados" ] || [ "${INGRESO}" == "rechazados" ] || [ "${INGRESO}" == "procesados" ] || [ "${INGRESO}" == "salida" ]
			then
				echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado para otro directorio."
				VARBOOL="F"
				return
			fi
		fi

	#DIRECTORIO = MAE
	if [ "${DIRECTORIO}" == "MAE" ]
		then
		    if [ "${INGRESO}" == "maestros" ]
			then 
				VARBOOL="V"
				return
			fi
	            if [ "${INGRESO}" == "bin" ] || [ "${INGRESO}" == "externos" ] || [ "${INGRESO}" == "aceptados"  ]  || [ "${INGRESO}" == "rechazados" ] || [ "${INGRESO}" == "procesados" ]  || [ "${INGRESO}" == "salida" ]
			then
				echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado para otro directorio."
				VARBOOL="F"
				return
			fi
		     if [ "${GRUPO}/${INGRESO}" == "$BINDIR" ]
			then
				VALBOOL="F"
				echo "El nombre que ha ingresado ya lo ha ingresado para otro directorio."
				return	
		        fi					

		fi

	#DIRECTORIO = EXT
	if [ "${DIRECTORIO}" == "EXT" ]
		then
		    if [ "${INGRESO}" == "externos" ]
			then 
				VARBOOL="V"
				return
			fi
	            if [ "${INGRESO}" == "maestros" ] ||  [ "${INGRESO}" == "bin" ] || [ "${INGRESO}" == "aceptados" ] || [ "${INGRESO}" == "rechazados" ] || [ "${INGRESO}" == "procesados" ] || [ "${INGRESO}" == "salida" ]
			then
				echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado para otro directorio."
				VARBOOL="F"
				return
			fi
		     if [ "${GRUPO}/${INGRESO}" == "$BINDIR" ] || [ "${GRUPO}/${INGRESO}" == "$MAEDIR" ]
			then
				VALBOOL="F"
				echo "El nombre que ha ingresado ya lo ha ingresado para otro directorio."
				return	
		        fi
		fi

	#DIRECTORIO = ACEP
	if [ "${DIRECTORIO}" == "ACEP" ]
		then
		    if [ "${INGRESO}" == "aceptados" ]
			then 
				VARBOOL="V"
				return
			fi
	            if [ "${INGRESO}" == "maestros"  ] || [ "${INGRESO}" == "externos"  ] || [ "${INGRESO}" == "bin" ] || [  "${INGRESO}" == "rechazados" ] || [ "${INGRESO}" == "procesados" ] || [ "${INGRESO}" == "salida" ]
			then
				echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado para otro directorio."
				VARBOOL="F"
				return
			fi
		    if [ "${GRUPO}/${INGRESO}" == "$BINDIR" ] || [ "${GRUPO}/${INGRESO}" == "$MAEDIR" ] || [ "${GRUPO}/${INGRESO}" == "$EXTDIR" ]
			then
				VALBOOL="F"
				echo "El nombre que ha ingresado ya lo ha ingresado para otro directorio."
				return	
		        fi
		fi

	#DIRECTORIO = RECH
	if [ "${DIRECTORIO}" == "RECH" ]
		then
		    if [ "${INGRESO}" == "rechazados" ]
			then 
				VARBOOL="V"
				return
			fi
	            if [ "${INGRESO}" == "maestros" ] || [  "${INGRESO}" == "externos" ] || [ "${INGRESO}" == "aceptados" ] || [ "${INGRESO}" == "bin" ] || [  "${INGRESO}" == "procesados" ] || [ "${INGRESO}" == "salida" ]
			then
				echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado para otro directorio."
				VARBOOL="F"
				return
			fi
		        if [ "${GRUPO}/${INGRESO}" == "$BINDIR" ] || [ "${GRUPO}/${INGRESO}" == "$MAEDIR" ] || [ "${GRUPO}/${INGRESO}" == "$EXTDIR" ] || [ "${GRUPO}/${INGRESO}" == "$ACEPDIR" ]
			then
				VALBOOL="F"
				echo "El nombre que ha ingresado ya lo ha ingresado para otro directorio."
				return	
		        fi
		fi
	
	#DIERCTORIO = PROC
	if [ "${DIRECTORIO}" == "PROC" ]
		then
		    if [ "${INGRESO}" == "procesados" ]
			then 
				VARBOOL="V"
				return
			fi
	            if [ "${INGRESO}" == "maestros" ] || [ "${INGRESO}" == "externos"  ] || [ "${INGRESO}" == "aceptados" ] || [ "${INGRESO}" == "rechazados" ] || [ "${INGRESO}" == "bin" ] ||  [ "${INGRESO}" == "salida" ]
			then
				echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado para otro directorio."
				VARBOOL="F"
				return
			fi
			if [ "${GRUPO}/${INGRESO}" == "$BINDIR" ] || [ "${GRUPO}/${INGRESO}" == "$MAEDIR" ] || [ "${GRUPO}/${INGRESO}" == "$EXTDIR" ] || [ "${GRUPO}/${INGRESO}" == "$ACEPDIR" ] || [ "${GRUPO}/${INGRESO}" == "$reCHDIR" ]
			then
				VALBOOL="F"
				echo "El nombre que ha ingresado ya lo ha ingresado para otro directorio."
				return	
		        fi
		fi

	#DIRECTORIO = SAL
	if [ "${DIRECTORIO}" == "SAL" ]
		then
		    if [ "${INGRESO}" == "salida" ]
			then 
				VARBOOL="V"
				return
			fi
	            if [ "${INGRESO}" == "maestros" ] || [ "${INGRESO}" == "externos" ] || [ "${INGRESO}" == "aceptados" ] || [ "${INGRESO}" == "rechazados" ] || [ "${INGRESO}" == "procesados" ] || [ "${INGRESO}" == "bin" ]
			then
				echo "El nombre que ha ingresado ${INGRESO} es un nombre reservado para otro directorio."
				VARBOOL="F"
				return
			fi
			if [ "${GRUPO}/${INGRESO}" == "$BINDIR" ] || [ "${GRUPO}/${INGRESO}" == "$MAEDIR" ] || [ "${GRUPO}/${INGRESO}" == "$EXTDIR" ] || [ "${GRUPO}/${INGRESO}" == "$ACEPDIR" ] || [ "${GRUPO}/${INGRESO}" == "$RECHDIR" ] || [ "${GRUPO}/${INGRESO}" == "$PROCDIR" ]
			then
				VALBOOL="F"
				echo "El nombre que ha ingresado ya lo ha ingresado para otro directorio."
				return	
		        fi
		fi
	 
	VARBOOL="V"
}

 
MENSAJECONSULTABINDIR="Defina el directorio de instalación de los ejecutables (${BINDIR}):"
MENSAJECONSULTABINDIRLOG="Consulta al usuario el directorio de instalación de los ejecutables, por defecto: ${BINDIR})."
consultarRutaEjecutables(){	
	DIRECTORIO="BIN"	
	VARBOOL="F"
	while [ "${VARBOOL}" == "F" ]
	do
		echo "${MENSAJECONSULTABINDIR}"
		./glog Instalacion "${MENSAJECONSULTABINDIRLOG}"
		read INGRESO
		if [ ${#INGRESO} -gt 0 ];
		then
			VerificarNoRepetido		
			if [ "${VARBOOL}" == "V" ];
				then
				BINDIR="${GRUPO}/${INGRESO}"
				fi
		else
			VARBOOL="V"
		fi
	done
	echo "Directorio de Archivos Ejecutables: ${BINDIR}"	
}

MENSAJECONSULTAMAEDIR="Defina el directorio de instalación de los maestros (${MAEDIR}):"
MENSAJECONSULTAMAEDIRLOG="Consulta al usuario el directorio de instalación de los maestros, por defecto: ${MAEDIR})."
consultarRutaMaestros(){	
	DIRECTORIO="MAE"	
	VARBOOL="F"
	while [ "${VARBOOL}" == "F" ]
	do
		echo "${MENSAJECONSULTAMAEDIR}"
		./glog Instalacion "${MENSAJECONSULTAMAEDIRLOG}"
		read INGRESO
		if [ ${#INGRESO} -gt 0 ];
		then
			VerificarNoRepetido		
			if [ "${VARBOOL}" == "V" ];
				then
				MAEDIR="${GRUPO}/${INGRESO}"
				fi
		else
			VARBOOL="V"
		fi
	done
	echo "Directorio de Maestros: ${MAEDIR}"	
}


MENSAJECONSULTAEXTDIR="Defina el directorio de instalación de los externos (${EXTDIR}):"
MENSAJECONSULTAEXTDIRLOG="Consulta al usuario el directorio de instalación de los externos, por defecto: ${EXTDIR})."
consultarRutaExternos(){	
	DIRECTORIO="EXT"	
	VARBOOL="F"
	while [ "${VARBOOL}" == "F" ]
	do
		echo "${MENSAJECONSULTAEXTDIR}"
		./glog Instalacion "${MENSAJECONSULTAEXTDIRLOG}"
		read INGRESO
		if [ ${#INGRESO} -gt 0 ];
		then
			VerificarNoRepetido		
			if [ "${VARBOOL}" == "V" ];
				then
				EXTDIR="${GRUPO}/${INGRESO}"
				fi
		else
			VARBOOL="V"
		fi
	done
	echo "Directorio de Externos: ${EXTDIR}"	
}


MENSAJECONSULTAACEPDIR="Defina el directorio de instalación de los aceptados (${ACEPDIR}):"
MENSAJECONSULTAACEPDIRLOG="Consulta al usuario el directorio de instalación de los aceptados, por defecto: ${ACEPDIR})."
consularRutaAceptados(){	
	DIRECTORIO="ACEP"	
	VARBOOL="F"
	while [ "${VARBOOL}" == "F" ]
	do
		echo "${MENSAJECONSULTAACEPDIR}"
		./glog Instalacion "${MENSAJECONSULTAACEPDIRLOG}"
		read INGRESO
		if [ ${#INGRESO} -gt 0 ];
		then
			VerificarNoRepetido		
			if [ "${VARBOOL}" == "V" ];
				then
				ACEPDIR="${GRUPO}/${INGRESO}"
				fi
		else
			VARBOOL="V"
		fi
	done
	echo "Directorio de Externos: ${ACEPDIR}"	
}


MENSAJECONSULTARECHDIR="Defina el directorio de instalación de los rechazados (${RECHDIR}):"
MENSAJECONSULTARECHDIRLOG="Consulta al usuario el directorio de instalación de los rechazados, por defecto: ${RECHDIR})."
consultarRutaRechazados(){
	DIRECTORIO="RECH"	
	VARBOOL="F"
	while [ "${VARBOOL}" == "F" ]
	do
		echo "${MENSAJECONSULTARECHDIR}"
		./glog Instalacion "${MENSAJECONSULTARECHDIRLOG}"
		read INGRESO
		if [ ${#INGRESO} -gt 0 ];
		then
			VerificarNoRepetido		
			if [ "${VARBOOL}" == "V" ];
				then
				RECHDIR="${GRUPO}/${INGRESO}"
				fi
		else
			VARBOOL="V"
		fi
	done
	echo "Directorio de Externos: ${RECHDIR}"	
}

MENSAJECONSULTAPROCDIR="Defina el directorio de instalación de los procesados (${PROCDIR}):"
MENSAJECONSULTAPROCDIRLOG="Consulta al usuario el directorio de instalación de los procesados, por defecto: ${PROCDIR})."
consultarRutaProcesados(){
	DIRECTORIO="PROC"	
	VARBOOL="F"
	while [ "${VARBOOL}" == "F" ]
	do
		echo "${MENSAJECONSULTAPROCDIR}"
		./glog Instalacion "${MENSAJECONSULTAPROCDIRLOG}"
		read INGRESO
		if [ ${#INGRESO} -gt 0 ];
		then
			VerificarNoRepetido		
			if [ "${VARBOOL}" == "V" ];
				then
				PROCDIR="${GRUPO}/${INGRESO}"
				fi
		else
			VARBOOL="V"
		fi
	done
	echo "Directorio de Externos: ${PROCDIR}"	
}



MENSAJECONSULTASALDIR="Defina el directorio de instalación de los Salida (${SALDIR}):"
MENSAJECONSULTASALDIRLOG="Consulta al usuario el directorio de instalación de los salida, por defecto: ${SALDIR})."
consutarRutaSalida(){	
	DIRECTORIO="SAL"
	VARBOOL="F"
	while [ "${VARBOOL}" == "F" ]
	do
		echo "${MENSAJECONSULTASALDIR}"
		./glog Instalacion "${MENSAJECONSULTASALDIRLOG}"
		read INGRESO
		if [ ${#INGRESO} -gt 0 ];
		then
			VerificarNoRepetido		
			if [ "${VARBOOL}" == "V" ];
				then
				SALDIR="${GRUPO}/${INGRESO}"
				fi
		else
			VARBOOL="V"
		fi
	done
	echo "Directorio de Externos: ${SALDIR}"	
}


ConsultasAlUsuario(){
	echo "DEFINICION  DE DIRECTORIOS:"
	echo "A continuacion se le consultara lso nombres de los directorios usados por el sistema."
	echo "Se le propondra un nombre por defecto entre parentesis, si lo acepta solo presione ENTER."
	echo ""
	
	#BINDIR="${GRUPO}/bin"	
	consultarRutaEjecutables
	MENSAJECONSULTABINDIR="Defina el directorio de instalación de los ejecutables (${BINDIR}):"
	MENSAJECONSULTABINDIRLOG="Consulta al usuario el directorio de instalación de los ejecutables, por defecto: ${BINDIR})."
	echo ''

	#MAEDIR="${GRUPO}/maestros"
	consultarRutaMaestros
	MENSAJECONSULTAMAEDIR="Defina el directorio de instalación de los maestros (${MAEDIR}):"
	MENSAJECONSULTAMAEDIRLOG="Consulta al usuario el directorio de instalación de los maestros, por defecto: ${MAEDIR})."
	echo ''

	#EXTDIR="${GRUPO}/externos"
	consultarRutaExternos
	MENSAJECONSULTAEXTDIR="Defina el directorio de instalación de los externos (${EXTDIR}):"
	MENSAJECONSULTAEXTDIRLOG="Consulta al usuario el directorio de instalación de los externos, por defecto: ${EXTDIR})."
	echo ''

	
	#ACEPDIR="${GRUPO}/aceptados"
	consularRutaAceptados
	MENSAJECONSULTAACEPDIR="Defina el directorio de instalación de los aceptados (${ACEPDIR}):"
	MENSAJECONSULTAACEPDIRLOG="Consulta al usuario el directorio de instalación de los aceptados, por defecto: ${ACEPDIR})."
	echo ''

	#RECHDIR="${GRUPO}/rechazados"
	consultarRutaRechazados
	MENSAJECONSULTARECHDIR="Defina el directorio de instalación de los rechazados (${RECHDIR}):"
	MENSAJECONSULTARECHDIRLOG="Consulta al usuario el directorio de instalación de los rechazados, por defecto: ${RECHDIR})."
	echo ''

	#PROCDIR="${GRUPO}/procesados"
	consultarRutaProcesados
	MENSAJECONSULTAPROCDIR="Defina el directorio de instalación de los procesados (${PROCDIR}):"
	MENSAJECONSULTAPROCDIRLOG="Consulta al usuario el directorio de instalación de los procesados, por defecto: ${PROCDIR})."
	echo ''
	
	#SALDIR="${GRUPO}/salida"
	consutarRutaSalida
MENSAJECONSULTASALDIR="Defina el directorio de instalación de los Salida (${SALDIR}):"
MENSAJECONSULTASALDIRLOG="Consulta al usuario el directorio de instalación de los salida, por defecto: ${SALDIR})."
	echo ''
}



mostrarEstructuraDeArchivos(){
mostrarHeader
echo "Directorio padre: ${GRUPO}"
echo "Deirectorio de configuraicon: ${CONFDIR}"
echo "Libreria de ejecutables: ${BINDIR}"
echo "repositorio de maestros: ${MAEDIR}"
echo "Directorio para el arrilo de archivos eternos: ${EXTDIR}"
echo "Directorio para los archivos aceptados: ${ACEPDIR}"
echo "Directorio para los archivos rechazados: ${RECHDIR}"
echo "Directorio para los archivos procesados: ${PROCDIR}"
echo "Directorio para los archivos de Salida: ${SALDIR}"
}



#######################################################################################################
#	       FIN DE DEFINICION DE FUNCIONES
#######################################################################################################




MENSAJECONSULTAINICIOINSTALACION="Inicia la instalación? (Si – No)"
MENSAJECONSULTAINICIOINSTALACIONLOG="Consulta si Inicia la instalación"
ConsultasDirectorios(){
	OPCION=""	
	while [[ ${OPCION} != "SI"  &&  ${OPCION} != "Si" && ${OPCION} != "sI" && ${OPCION} != "si"  ]]
	    do		
		ConsultasAlUsuario
		mostrarEstructuraDeArchivos
		echo "${MENSAJECONSULTAINICIOINSTALACION}"
		./glog Instalacion "${MENSAJEINSTALACIONCOMPLETARLOG}"
		read OPCION
			while [[ ${OPCION} != "SI"  &&  ${OPCION} != "Si"  && ${OPCION} != "NO"  && ${OPCION} != "No" && ${OPCION} != "si" && ${OPCION} != "no" && ${OPCION} != "sI" && ${OPCION} != "nO"  ]]
				do
					echo "ingreso una opcion incorrecta."
					echo "${MENSAJECONSULTAINICIOINSTALACION}"
					read OPCION
				done
		echo ${OPCION}
	    done

}

MENSAJECREADONDIRECTORIOS="Creando Estructuras de directorio....."
crearDirectoriosNoExistentes(){
	echo "${MENSAJECREADONDIRECTORIOS}"
	./glog Instalacion "${MENSAJECREADONDIRECTORIOS}" 
	mkdir -p "${BINDIR}"
	mkdir -p "${MAEDIR}"
	mkdir -p "${EXTDIR}"
	mkdir -p "${ACEPDIR}"
	mkdir -p "${RECHDIR}"
	mkdir -p "${PROCDIR}"
	mkdir -p "${SALDIR}"	
}



MENSAJEINSTALACIONENCURSO="Creando Estructuras de directorio....."
instalar(){
	mostrarHeader
	echo "${MENSAJEINSTALACIONENCURSO}"
	./glog InsPro "${MENSAJEINSTALACIONENCURSO}\n"
	echo ''

	mostrarEstructuraDeArchivos
	crearDirectoriosNoExistentes	

#	printf  "${MENSAJEINSTALACIONMAE}"
#	./glog InsPro "${MENSAJEINSTALACIONMAE}"	
#	moverArchivosDeDirectorio "${RUTAARCHIVOSMAESTROSYTABLAS}" "${MAEDIR}"
#	moverArchivosDeDirectorio "${RUTAARCHIVOSMAESTROSYTABLAS}/tab" "${MAEDIR}/tab"	
#	printf  "${MENSAJEOK}\n"
#	printf  "\n"
#
#
#	printf  "${MENSAJEINSTALACIONBIN}"
#	./glog InsPro "${MENSAJEINSTALACIONBIN}"	
#	moverArchivosDeDirectorio "${RUTAEJECUTABLES}" "${BINDIR}"
#	chmod +x "${BINDIR}/IniPro"
#	printf  "${MENSAJEOK}\n"
#	printf  "\n"
#
#	printf  "${MENSAJEINSTALACIONCONF}"
#	./glog InsPro "${MENSAJEINSTALACIONCONF}"
#	actualizarConfiguracion
#	printf "${MENSAJEOK}\n"
#	printf "\n"
}

actualizarConfiguracion(){		
	echo "GRUPO-$GRUPO-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "CONFDIR-$CONFDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "BINDIR-$BINDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "MAEDIR-$MAEDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "EXTDIR-$EXTDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "ACEPDIR-$ACEPDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "RECHDIR-$RECHDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "PROCDIR-$PROCDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
	echo "SALDIR-$SALDIR-${USER}-$(date +%Y-%m-%d_%H:%M:%S)" >> "${ARCHIVOCONF}"
}

leerArchivoConf(){
	SAVEIFS=$IFS
	IFS=$'\n'
	for registro  in `cat $ARCHIVOCONF`; do
		variable=`echo $registro | cut -d "-" -f1`
		valor=`echo $registro | cut -d "-" -f2`	
		export $variable=$valor
	done;
	IFS=$SAVEIFS
}

#compara un directorio completo ($1), con otro($2) posiblemente inexistento o incompleto.
chequearFaltantes(){
	if [ ! -d "$2" ]; then
		#si no existe el otro dir, listo todo el primero
		echo "$1/"		
		mostarEstructuraDeArchivosYDirectorios "$1"
	else
		diff -r "$1" "$2"
		diff -r "$1" "$2" | ./glog InsPro "$1"
	fi
	echo ''
}

verificarInstalacionCompleta(){	
	leerArchivoConf
	mostrarEstructuraDeArchivos

echo "comparacion"

	chequearFaltantes "${GRUPO}/dir1" "${GRUPO}/dir2"
	echo "Sali de la comparacion"


	declare local temp="$(chequearFaltantes "$RUTAEJECUTABLES" "$BINDIR")"
	if [ ${#temp} -gt 0 ]; then		
		echo -e "${MENSAJEINSTALACIONINCOMPLETA}"
		./glog Instalacion "${MENSAJEINSTALACIONINCOMPLETALOG}"
		echo ''
		echo "${MENSAJEINSTALACIONFALTANTES}"
		./glog Instalacion "${MENSAJEINSTALACIONFALTANTES}"
		echo 'Entrando'
		echo "${RUTAEJECUTABLES}"
		echo "${BINDIR}"
		chequearFaltantes "$RUTAEJECUTABLES" "$BINDIR"
		chequearFaltantes "$RUTAARCHIVOSMAESTROSYTABLAS" "$MAEDIR"	
		echo ''			
		#confirmarCompletarInstalacion
	else
		temp="$(chequearFaltantes "$RUTAARCHIVOSMAESTROSYTABLAS" "$MAEDIR")"
		if [ ${#temp} -gt 0 ]; then
			echo -e "${MENSAJEINSTALACIONINCOMPLETA}"
			./glog Instalacion "${MENSAJEINSTALACIONINCOMPLETALOG}"
			echo ''
			echo "${MENSAJEINSTALACIONFALTANTES}"
			./glog Instalacion "${MENSAJEINSTALACIONFALTANTES}"
			echo ''
			chequearFaltantes "$RUTAARCHIVOSMAESTROSYTABLAS" "$MAEDIR"	
			echo ''
			#confirmarCompletarInstalacion
		else
			echo -e "${MENSAJEINSTALACIONCOMPLETA}"
			./glog Instalacion "${MENSAJEINSTALACIONCOMPLETALOG}"
			echo ''
			echo "${MENSAJEINSTALACIONCANCELADA}"
			./glog Instalacion "${MENSAJEINSTALACIONCANCELADA}"
			echo ''
			#finalizarInstalacion
		fi	
	fi
}




#######################################################################################################
#				PROGRAMA PRINCIPAL				   
#######################################################################################################



CrearDirectoriosIniciales
mostrarHeader
echo 'Inicio de Ejecución de InsPro'
./glog Instalacion 'Inicio de Ejecución de InsPro'
echo ''
echo "Directorio predefinido de Configuración: ${CONFDIR}"
./glog Instalacion "Directorio predefinido de Configuración: ${CONFDIR}"
echo ''
echo "Log de la instalación: ${ARCHIVOLOG}"
./glog Instalacion "Log de la instalación: ${ARCHIVOLOG}"
echo ''

#Verificando si existe el archivo de confiuracion
    MSJVERIFICANDOINSTALACION="Verificando que el sistema no este instalado...."
    MSJVERIFICANDOARCHCONF="Verificando si existe el archivo de configuracion..."
    MSJACRHCONFEXISTE="El archvo de configuracion existe"
    MSJINSTALCIONEXISTENTE="Hay una una instalacion existente en el sistema"	    
    echo "${MSJVERIFICANDOINSTALACION}"
    echo "${MSJVERIFICANDOARCHCONF}" 	
    if [ -f "${ARCHIVOCONF}" ]
	then
	   echo "${MSJACRHCONFEXISTE}"	
	   echo "${MSJINSTALCIONEXISTENTE}"
	   verificarInstalacionCompleta
	   echo "Mostrando archivos"
	   exit 1		
	fi

ConsultasDirectorios
instalar
actualizarConfiguracion
